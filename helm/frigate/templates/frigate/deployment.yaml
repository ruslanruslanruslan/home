apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate
  namespace: {{ .Release.Namespace }}
  labels:
    app: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - kube03
      volumes:
        - name: config-volume
          configMap:
            name: frigate
        - name: config
          persistentVolumeClaim:
            claimName: home-frigate-amur-config
        - name: media
          persistentVolumeClaim:
            claimName: home-frigate-amur-media
      containers:
      - name: frigate
        image: ghcr.io/blakeblackshear/frigate
        imagePullPolicy: Always
        securityContext:
          privileged: true
        volumeMounts:
        - name: config-volume
          mountPath: /config
        livenessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
